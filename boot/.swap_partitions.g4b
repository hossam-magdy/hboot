!BAT
clear
if "%1"=="" goto :error1
pager off
graphicsmode 3

setlocal
set target=%1
if "%target%"=="/?" goto :syntax
if "%target%"=="-help" goto :syntax

set ask=%2
if "%3"=="SURE" set sure=Y

if not exist /boot/wenv echo ERROR: /boot/wenv is missing! && goto :EOF
insmod /boot/wenv > nul

::validate target
wenv set cdev=${target:0:1}${target:2:1}${target:-1:1} > nul
if "%cdev%"=="(d)" set target=%target%+1
if "%cdev%"=="(x)" set target=%target%+1


echo -n %1 
cat --hex --skip=510 --length=2 %target% | set magic=
set magic=0x%magic:~10,2%%%magic:~13,2%
if "%magic%"=="0x55AA" goto :mbOK
echo ERROR: Invalid MBR - No valid Magic Bytes: %magic% instead of 0x55AA

:mbOK
:: IF SURE, exec faster by skipping the echo stuff
::if "%3"=="SURE" goto :init_swapping
cat --hex --skip=440 --length=4 %target% | set disksig=
set disksig=%disksig:~10,2%%%disksig:~13,2%%%disksig:~16,2%%%disksig:~19,2%
echo Disk Signature %disksig%

echo -e ÚÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
echo -e ³Ptn³  Type    ³Boot³  Begin   CHS  ³   End   CHS   ³ LBA Start ³ LBA Sectors ³
echo -e ÃÄÄÄÅÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄ´
call :part_entry 0 446
echo -e \nÃÄÄÄÅÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄ´
call :part_entry 1 462
echo -e \nÃÄÄÄÅÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄ´
call :part_entry 2 478
echo -e \nÃÄÄÄÅÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄ´
call :part_entry 3 494
echo -e \nÀÄÄÄÁÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÙ


if "%ask%"=="" set /u /p ask=Which partition do you want to be the first partition? (1-3) : 

echo

:init_swapping
set pp1=
if "%ask%"=="1" set pp1=0x6201ce && set pp2=0x6201d2 && set pp3=0x6201d6 && set pp4=0x6201da
if "%ask%"=="2" set pp1=0x6201de && set pp2=0x6201e2 && set pp3=0x6201e6 && set pp4=0x6201ea
if "%ask%"=="3" set pp1=0x6201ee && set pp2=0x6201f2 && set pp3=0x6201f6 && set pp4=0x6201fa
if "%pp1%"=="" goto :EOF

echo eeeeeeeeeeeeeeee > (md)0x3000+1
echo eeeeeeeeeeeeeeee > (md)0x3100+1

# first get MBR into two areas of memory
dd if=%target% of=(md)0x3000+1 count=1 > nul
dd if=%target% of=(md)0x3100+1 count=1 > nul

echo PTN TABLE WAS...
cat --hex --length=64 --skip=446 (md)0x3000+1
 
#Now swap table with 1st table
set /A m=*0x6001be > nul
write     %pp1% %m% > nul
set /A m=*0x6001c2 > nul
write     %pp2% %m% > nul
set /A m=*0x6001c6 > nul
write     %pp3% %m% > nul
set /A m=*0x6001ca > nul
write     %pp4% %m% > nul
set /a pp1=%pp1%-0x20000 > nul
set /a pp2=%pp2%-0x20000 > nul
set /a pp3=%pp3%-0x20000 > nul
set /a pp4=%pp4%-0x20000 > nul
set /A m=*%pp1% > nul
write     0x6201be %m% > nul
set /A m=*%pp2% > nul
write     0x6201c2 %m% > nul
set /A m=*%pp3% > nul
write     0x6201c6 %m% > nul
set /A m=*%pp4% > nul
write     0x6201ca %m% > nul

echo NEW TABLE WILL BE...
cat --hex --length=64 --skip=446 (md)0x3100+1

if not "%sure%"=="Y" set /u /p sure=Update %1 MBR (Y/N) : 
echo
if not "%sure%"=="Y" goto :EOF
if "%sure%"=="Y" dd if=(md)0x3100+1 of=(hd0) count=1 > nul || echo ERROR: WRITE TO %1 FAILED! && goto :EOF
echo Partition table was updated OK.

goto :EOF


:part_entry
cat --hex --skip=%2 --length=16 %target% | set part=
echo %part:~10,2%%%part:~13,2%%%part:~16,2%%%part:~19,2%%%part:~23,2%%%part:~26,2%%%part:~29,2%%%part:~32,2%%%part:~36,2%%%part:~39,2%%%part:~42,2%%%part:~45,2%%%part:~49,2%%%part:~52,2%%%part:~55,2%%%part:~58,2% | set pe=
echo %part:~10,2% | set as=

echo %part:~19,2%%%part:~16,2% | set bcs=0x
echo %part:~19,2% | set bc=0x
echo %part:~16,2% | set bs=0x
echo %part:~13,2% | set bh=0x

wenv calc bc2b=%bs%>>6<<6
wenv calc bs=%bs%-%bc2b%
wenv calc bc=%bc2b%<<2+%bc%
wenv calc bh=%bh%

echo %part:~23,2% | set pt=

echo %part:~32,2%%%part:~29,2% | set ecs=0x
echo %part:~32,2% | set ec=0x
echo %part:~29,2% | set es=0x
echo %part:~26,2% | set eh=0x

wenv calc ec2b=%es%>>6<<6
wenv calc es=%es%-%ec2b%
wenv calc ec=%ec2b%<<2+%ec%
wenv calc eh=%eh%


echo %part:~45,2%%%part:~42,2%%%part:~39,2%%%part:~36,2% | set slb=0x
wenv calc slb=%slb%

echo %part:~58,2%%%part:~55,2%%%part:~52,2%%%part:~49,2% | set ns=0x
wenv calc ns=%ns%

set bchs=%bc%/%bh%/%bs%
call :get_length bchs
wenv calc bbefl=15-%bchsl%
set bchsf=³               ³
wenv set bchsf=${bchsf:0:%bbefl%}%bchs% > nul

set echs=%ec%/%eh%/%es%
call :get_length echs
wenv calc ebefl=15-%echsl%
set echsf=³               ³
wenv set echsf=${echsf:0:%ebefl%}%echs% > nul

call :get_length slb
wenv calc sbefl=12-%slbl%
set slbf=³           ³
wenv set slbf=${slbf:0:%sbefl%}%slb% > nul

call :get_length ns
wenv calc nbefl=14-%nsl%
set nsf=³             ³
wenv set nsf=${nsf:0:%nbefl%}%ns%³ > nul

set pte=
::                      xxxxxxxxx
if "%pt%"=="07" set pte=NTFS   07   
if "%pt%"=="00" set pte=(none) 00
if "%pt%"=="01" set pte=FAT12  01
if "%pt%"=="02" set pte=XENIX  02
if "%pt%"=="03" set pte=XENIX  03
if "%pt%"=="04" set pte=FAT16  04
if "%pt%"=="05" set pte=ExtChs 05
if "%pt%"=="06" set pte=FAT16  06
if "%pt%"=="07" set pte=NTFS   07
if "%pt%"=="08" set pte=FAT16  08
if "%pt%"=="09" set pte=QNX    09
if "%pt%"=="0A" set pte=OS/2   0A
if "%pt%"=="0B" set pte=FAT32  0B
if "%pt%"=="0C" set pte=FAT32X 0C
if "%pt%"=="0D" set pte=       0D
if "%pt%"=="0E" set pte=FAT16X 0E
if "%pt%"=="0F" set pte=EXTLBA 0F
if "%pt%"=="21" set pte=hidden 21
if "%pt%"=="27" set pte=WinRE  27
if "%pt%"=="81" set pte=LINUX  81
if "%pt%"=="83" set pte=LINUX  83

if "%pte%"=="" set  pte=\x20      %pt%

set pt=%pte%
set line=³ %1 ³%pt% ³ %as% %bchsf% %echsf% %slbf%%%nsf%
echo -e -n %line%

goto :EOF

:get_length
wenv get %1
set %1l=%?_GET%
goto :EOF


:error1
echo ERROR: Missing parameter!
echo
echo You must provide a target hard disk device such as
echo (hd0) or (hd1).
echo 
:syntax
echo %~nx0 - grub4dos BAT! file by Steve Si and jaclaz.
echo Released under the jaclaz's CAREWARE licence.
echo Version 0.01 - requires wenv.
echo
echo Function: Sets a partition table entry as the first table entry
echo           thus making it visible to Windows (for USB Flash drives).
echo 
echo Syntax:
echo %~pnx0 <device>  [ptn number 1-3] [SURE]
echo
echo Examples:
echo %~nx0 (hd0)        - prompts for partition to set as first ptn
echo %~nx0 (hd0) 1      - swap 2nd ptn with first ptn + user confirm
echo %~nx0 (hd0) 1 SURE - no confirmation prompt before updating MBR
echo
goto :EOF

:end